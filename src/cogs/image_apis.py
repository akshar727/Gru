import base64
from io import BytesIO
import time
from nextcord.ext import commands
import aiohttp
import nextcord as discord
import random
from src.utils import config
import re
from googleapiclient.discovery import build
import urllib.parse
import urllib.request


class DropdownImageSelect(discord.ui.Select):
    def __init__(self, message, images, user):
        self.message = message
        self.images = images
        self.user = user

        options = [
            discord.SelectOption(label="1"),
            discord.SelectOption(label="2"),
            discord.SelectOption(label="3"),
            discord.SelectOption(label="4"),
            discord.SelectOption(label="5"),
            discord.SelectOption(label="6"),
            discord.SelectOption(label="7"),
            discord.SelectOption(label="8"),
            discord.SelectOption(label="9"),
        ]
        super().__init__(
            placeholder="Choose the image you want to see!",
            min_values=1,
            max_values=1,
            options=options
        )

    async def callback(self, interaction: discord.Interaction):
        if not int(self.user) == int(interaction.user.id):
            return await interaction.response.send_message("You are not the owner of this select!", ephemeral=True)
        selection = int(self.values[0]) - 1
        image = BytesIO(base64.decodebytes(self.images[selection].encode("utf-8")))
        return await self.message.edit(content="Images generated by **https://craiyon.com**",
                                       file=discord.File(image, filename="generatedImage.png"),
                                       view=DropdownImageView(self.message, self.images, self.user))


class DropdownImageView(discord.ui.View):
    def __init__(self, message, images, user):
        super().__init__()
        self.message = message
        self.images = images
        self.user = user
        self.add_item(DropdownImageSelect(self.message, self.images, self.user))


class ImageApis(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        print("Image/Video APIS loaded!")

    # TODO : add to help

    @commands.command(aliases=["craiyon", "gen_img"])
    async def generate(self, ctx, *, prompt: str):
        eta = int(time.time() + 60)
        msg = await ctx.reply(f"Go grab some popcorn, this may take some time... ETA: <t:{eta}:R>")
        async with aiohttp.request("POST", "https://backend.craiyon.com/generate", json={"prompt": prompt}) as resp:
            r = await resp.json()
            images = r['images']
            image = BytesIO(base64.decodebytes(images[0].encode("utf-8")))
            return await msg.edit(content="Images generated by **https://craiyon.com**",
                                  file=discord.File(image, filename="generatedImage.png"),
                                  view=DropdownImageView(msg, images, ctx.author.id))

    @commands.command(aliases=["show"])
    async def showpic(self, ctx, *, search):
        ran = random.randint(0, 9)
        resource = build("customsearch", "v1", developerKey=config.getenv("GOOGLE_API_KEY")).cse()
        result = resource.list(q=f"{search}",
                               cx="ac76df62ee40c6a13",
                               searchType="image").execute()
        url = result["items"][ran]["link"]
        embed1 = discord.Embed(title=f"Here's Your Image ({search})",
                               color=discord.Color.random())
        embed1.set_image(url=url)
        await ctx.reply(embed=embed1)

    @commands.command()
    async def youtube(self, ctx, *, search):
        query_string = urllib.parse.urlencode({'search_query': search})
        html_content = urllib.request.urlopen('https://www.youtube.com/results?' +
                                              query_string)
        search_results = re.findall(r"watch\?v=(\S{11})",
                                    html_content.read().decode())

        await ctx.reply(
            f"Here's your video from query {search}!!\n{'https://www.youtube.com/watch?v=' + search_results[0]}")


def setup(bot):
    bot.add_cog(ImageApis(bot))
